
import gradio as gr
from gradio_rich_textbox import RichTextbox

from .models import MODEL
from .settings import settings
from .interface_highlighted import score_label, format_score


DETECT_LANGUAGE = "Detect Language"


def on_click(text, detect_language, detected_language):
    if detect_language == DETECT_LANGUAGE:
        output = MODEL.score(text)
        score, detected_language = output['score'], output['language']
    else:
        score = MODEL.score(text, language=detect_language.lower())['score']
        detected_language = None
    return format_score(score), score_label(score), detected_language


with gr.Blocks(title="DETECTUA (simple)") as demo:
    gr.Markdown(
        """
        # TextUA's AI Detection Service

        This web provides an inference service to detect texts that are suspect to have been 
        generated using a Large Language Model like OpenAI's ChatGPT.
        
        Copy the text to the input field below and click on the "Score" button on the right 
        to obtain a probability score that the text has been generated by an AI.
        """)

    detected_language = gr.State(None)

    with gr.Row():
        with gr.Column(scale=3):
            input_text = gr.Textbox(label="Input Text", placeholder="Enter your text here...")

        with gr.Column(variant="panel", scale=1, min_width=100):
            score_btn = gr.Button("Score")

            language_dropdown = gr.Dropdown(
                [DETECT_LANGUAGE] + list(settings.LANGUAGES.keys()),
                label="Input Language",
                value=DETECT_LANGUAGE,
                interactive=True)

            output_label = RichTextbox(label="Result", interactive=False, visible=len(settings.PROBABILITY_RANGES) > 0)
            output_score = gr.Textbox(label="Score")

            @gr.render(inputs=detected_language)
            def render_detected_language(detected_language):
                gr.Textbox(detected_language, label="Detected Language",
                           interactive=False, visible=detected_language != None)

        score_btn.click(fn=on_click,
                        inputs=[input_text, language_dropdown, detected_language],
                        outputs=[output_score, output_label, detected_language])


if __name__ == '__main__':
    from .text_models import TEXT_MODEL

    MODEL.load()
    TEXT_MODEL.load()

    demo.launch(debug=True)
